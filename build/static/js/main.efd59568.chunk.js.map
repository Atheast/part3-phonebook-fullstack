{"version":3,"sources":["service/person.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Error","Person","remove","name","phone","search","includes","onClick","Filter","handleSearch","value","onChange","PersonForm","addPerson","newName","handleChangeName","newPhone","handleChangePhone","onSubmit","type","Persons","persons","setPersons","arr","filter","x","length","map","person","window","confirm","personService","key","number","App","useState","setNewName","setNewPhone","setSearch","addMessage","setAddMessage","errorMessage","setErrorMessage","useEffect","e","target","preventDefault","find","setTimeout","concat","catch","err","error","p","changedPerson","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efd59568.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios\r\n            .get(baseUrl)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios\r\n            .post(baseUrl,newObject)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    return axios\r\n            .put(`${baseUrl}/${id}`,newObject)\r\n            .then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios\r\n            .delete(`${baseUrl}/${id}`)\r\n            .then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, {useState, useEffect} from 'react';\nimport personService from './service/person';\nimport './app.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [search, setSearch] = useState('');\n  const [addMessage, setAddMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleChangeName = (e) => setNewName(e.target.value);\n  const handleChangePhone = (e) => setNewPhone(e.target.value);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(data => {\n        setPersons(data);\n      });\n  },[])\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    let repeat = persons.find(x => x.name === newName) ? true : false;\n    \n    if(repeat) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) && newPhone !== '') {\n        let p = persons.find(x => x.name === newName);\n        let newObject = {...p, number: newPhone}\n        personService\n          .update(newObject.id,newObject)\n          .then(changedPerson => {\n            setPersons(persons.map(x => x.id !== changedPerson.id ? x : changedPerson))\n            console.log(changedPerson);\n            setNewName('');\n            setNewPhone('');\n          })\n          .catch(() => {\n            setErrorMessage(`Information of ${newObject.name} has already been removed from server`);\n            setTimeout(() => setErrorMessage(''), 5000);\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newPhone\n      }\n\n      personService\n        .create(newPerson)\n        .then(data => {\n          setAddMessage(`Added ${data.name}`);\n          setTimeout(() => setAddMessage(''), 5000);\n          setPersons(persons.concat(data));\n          setNewName('');\n          setNewPhone('');\n        })\n        .catch(err => {\n          setErrorMessage(err.response.data.error);\n          setTimeout(() => setErrorMessage(''), 5000);\n        });\n    }\n  }\n\n  const handleSearch = (e) => setSearch(e.target.value);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={addMessage}/>\n      <Error message={errorMessage}/>\n      <Filter search={search} handleSearch={handleSearch}/>\n      <h3>add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handleChangeName={handleChangeName} newPhone={newPhone} handleChangePhone={handleChangePhone}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} search={search} setPersons={setPersons}/>\n    </div>\n  );\n}\n\nconst Notification = ({message}) => (message) ? <h2 className=\"added\">{message}</h2> : null;\n\nconst Error = ({message}) => (message) ? <h2 className=\"error\">{message}</h2> : null;\n\nconst Person = ({remove,name,phone,search}) => (name.includes(search) ? <p>{name} {phone} <button onClick={remove}> Delete </button></p> : '');\n\nconst Filter = ({search,handleSearch}) => (\n  <div>\n    filter shown with \n    <input value={search} onChange={handleSearch}/>\n  </div>\n)\n\nconst PersonForm = ({addPerson,newName,handleChangeName,newPhone,handleChangePhone}) => (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={handleChangeName}/>\n    </div>\n    <div>\n      phone: <input value={newPhone} onChange={handleChangePhone}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({persons,search,setPersons}) => {\n  let arr = persons.filter(x => x.name.includes(search));\n  const removePerson = (id,name) => {\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(x => x.id !== id))\n        })\n    }\n  }\n\n  return(\n    <div>\n      {(arr.length) ? persons.map(person => <Person remove={() => removePerson(person.id,person.name)} key={person.id} id={person.id} name={person.name} phone={person.number} search={search}/>) : 'not name founds'}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}